/* tslint:disable */
/* eslint-disable */
/**
 * BarbarianFoodAPI
 * example
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    AddressSettingsRequest,
    AddressSettingsRequestFromJSON,
    AddressSettingsRequestToJSON,
    DefaultResponse,
    DefaultResponseFromJSON,
    DefaultResponseToJSON,
    PaymentSettingsRequest,
    PaymentSettingsRequestFromJSON,
    PaymentSettingsRequestToJSON,
    ProfileSettingsRequest,
    ProfileSettingsRequestFromJSON,
    ProfileSettingsRequestToJSON,
} from '../models';

export interface EditAddressInformationRequest {
    addressSettingsRequest: AddressSettingsRequest;
}

export interface EditPaymentInformationRequest {
    paymentSettingsRequest: PaymentSettingsRequest;
}

export interface EditProfileInformationRequest {
    profileSettingsRequest: ProfileSettingsRequest;
}

/**
 * 
 */
export class SettingsApi extends runtime.BaseAPI {

    /**
     * Endpoint used to edit address settings
     */
    async editAddressInformationRaw(requestParameters: EditAddressInformationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<DefaultResponse>> {
        if (requestParameters.addressSettingsRequest === null || requestParameters.addressSettingsRequest === undefined) {
            throw new runtime.RequiredError('addressSettingsRequest','Required parameter requestParameters.addressSettingsRequest was null or undefined when calling editAddressInformation.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/settings/address`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AddressSettingsRequestToJSON(requestParameters.addressSettingsRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DefaultResponseFromJSON(jsonValue));
    }

    /**
     * Endpoint used to edit address settings
     */
    async editAddressInformation(requestParameters: EditAddressInformationRequest, initOverrides?: RequestInit): Promise<DefaultResponse> {
        const response = await this.editAddressInformationRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Endpoint used to edit payment settings
     */
    async editPaymentInformationRaw(requestParameters: EditPaymentInformationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<DefaultResponse>> {
        if (requestParameters.paymentSettingsRequest === null || requestParameters.paymentSettingsRequest === undefined) {
            throw new runtime.RequiredError('paymentSettingsRequest','Required parameter requestParameters.paymentSettingsRequest was null or undefined when calling editPaymentInformation.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/settings/payment`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: PaymentSettingsRequestToJSON(requestParameters.paymentSettingsRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DefaultResponseFromJSON(jsonValue));
    }

    /**
     * Endpoint used to edit payment settings
     */
    async editPaymentInformation(requestParameters: EditPaymentInformationRequest, initOverrides?: RequestInit): Promise<DefaultResponse> {
        const response = await this.editPaymentInformationRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Endpoint used to edit profile settings
     */
    async editProfileInformationRaw(requestParameters: EditProfileInformationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<DefaultResponse>> {
        if (requestParameters.profileSettingsRequest === null || requestParameters.profileSettingsRequest === undefined) {
            throw new runtime.RequiredError('profileSettingsRequest','Required parameter requestParameters.profileSettingsRequest was null or undefined when calling editProfileInformation.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/settings/profile`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ProfileSettingsRequestToJSON(requestParameters.profileSettingsRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DefaultResponseFromJSON(jsonValue));
    }

    /**
     * Endpoint used to edit profile settings
     */
    async editProfileInformation(requestParameters: EditProfileInformationRequest, initOverrides?: RequestInit): Promise<DefaultResponse> {
        const response = await this.editProfileInformationRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
