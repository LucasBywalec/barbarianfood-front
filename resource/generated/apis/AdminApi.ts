/* tslint:disable */
/* eslint-disable */
/**
 * BarbarianFoodAPI
 * example
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    AddNewOfferRequest,
    AddNewOfferRequestFromJSON,
    AddNewOfferRequestToJSON,
    DefaultResponse,
    DefaultResponseFromJSON,
    DefaultResponseToJSON,
    GetOfferResponse,
    GetOfferResponseFromJSON,
    GetOfferResponseToJSON,
    ListAllUsersResponse,
    ListAllUsersResponseFromJSON,
    ListAllUsersResponseToJSON,
} from '../models';

export interface AddNewOfferOperationRequest {
    addNewOfferRequest: AddNewOfferRequest;
}

/**
 * 
 */
export class AdminApi extends runtime.BaseAPI {

    /**
     * Endpoint used to add new offer
     */
    async addNewOfferRaw(requestParameters: AddNewOfferOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<DefaultResponse>> {
        if (requestParameters.addNewOfferRequest === null || requestParameters.addNewOfferRequest === undefined) {
            throw new runtime.RequiredError('addNewOfferRequest','Required parameter requestParameters.addNewOfferRequest was null or undefined when calling addNewOffer.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/admin/list/offer`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AddNewOfferRequestToJSON(requestParameters.addNewOfferRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DefaultResponseFromJSON(jsonValue));
    }

    /**
     * Endpoint used to add new offer
     */
    async addNewOffer(requestParameters: AddNewOfferOperationRequest, initOverrides?: RequestInit): Promise<DefaultResponse> {
        const response = await this.addNewOfferRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Endpoint used to list all offers
     */
    async listAllOffersRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<GetOfferResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/admin/list/offer`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetOfferResponseFromJSON(jsonValue));
    }

    /**
     * Endpoint used to list all offers
     */
    async listAllOffers(initOverrides?: RequestInit): Promise<GetOfferResponse> {
        const response = await this.listAllOffersRaw(initOverrides);
        return await response.value();
    }

    /**
     * Endpoint used to list all users
     */
    async listAllUsersRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<ListAllUsersResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/admin/list/users`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ListAllUsersResponseFromJSON(jsonValue));
    }

    /**
     * Endpoint used to list all users
     */
    async listAllUsers(initOverrides?: RequestInit): Promise<ListAllUsersResponse> {
        const response = await this.listAllUsersRaw(initOverrides);
        return await response.value();
    }

}
